{"version":3,"file":"map-state.js","names":["WebMercatorViewport","normalizeViewportProps","clamp","assert","MAPBOX_LIMITS","minZoom","maxZoom","minPitch","maxPitch","DEFAULT_STATE","pitch","bearing","altitude","PITCH_MOUSE_THRESHOLD","PITCH_ACCEL","MapState","constructor","width","height","latitude","longitude","zoom","transitionDuration","transitionEasing","transitionInterpolator","transitionInterruption","startPanLngLat","startZoomLngLat","startRotatePos","startBearing","startPitch","startZoom","Number","isFinite","_viewportProps","_applyConstraints","_state","getViewportProps","getState","panStart","pos","_getUpdatedMapState","_unproject","pan","startPos","_calculateNewLngLat","panEnd","rotateStart","rotate","deltaAngleX","deltaAngleY","newRotation","_calculateNewPitchAndBearing","_getRotationParams","rotateEnd","zoomStart","scale","_calculateNewZoom","zoomedViewport","Object","assign","getMapCenterByLngLatPosition","lngLat","zoomEnd","newProps","props","viewport","unproject","Math","log2","deltaScaleX","deltaScaleY","deltaX","deltaY","centerY","startY","abs","min","max"],"sources":["../../../src/utils/map-state.js"],"sourcesContent":["import WebMercatorViewport, {normalizeViewportProps} from 'viewport-mercator-project';\nimport {clamp} from './math-utils';\nimport assert from './assert';\n\n// MAPBOX LIMITS\nexport const MAPBOX_LIMITS = {\n  minZoom: 0,\n  maxZoom: 24,\n  minPitch: 0,\n  maxPitch: 85\n};\n\nconst DEFAULT_STATE = {\n  pitch: 0,\n  bearing: 0,\n  altitude: 1.5\n};\n\nconst PITCH_MOUSE_THRESHOLD = 5;\nconst PITCH_ACCEL = 1.2;\n\nexport default class MapState {\n  constructor({\n    /** Mapbox viewport properties */\n    /** The width of the viewport */\n    width,\n    /** The height of the viewport */\n    height,\n    /** The latitude at the center of the viewport */\n    latitude,\n    /** The longitude at the center of the viewport */\n    longitude,\n    /** The tile zoom level of the map. */\n    zoom,\n    /** The bearing of the viewport in degrees */\n    bearing = DEFAULT_STATE.bearing,\n    /** The pitch of the viewport in degrees */\n    pitch = DEFAULT_STATE.pitch,\n    /**\n     * Specify the altitude of the viewport camera\n     * Unit: map heights, default 1.5\n     * Non-public API, see https://github.com/mapbox/mapbox-gl-js/issues/1137\n     */\n    altitude = DEFAULT_STATE.altitude,\n\n    /** Viewport constraints */\n    maxZoom = MAPBOX_LIMITS.maxZoom,\n    minZoom = MAPBOX_LIMITS.minZoom,\n    maxPitch = MAPBOX_LIMITS.maxPitch,\n    minPitch = MAPBOX_LIMITS.minPitch,\n\n    /** Transition props */\n    transitionDuration,\n    transitionEasing,\n    transitionInterpolator,\n    transitionInterruption,\n\n    /** Interaction states, required to calculate change during transform */\n    /* The point on map being grabbed when the operation first started */\n    startPanLngLat,\n    /* Center of the zoom when the operation first started */\n    startZoomLngLat,\n    /* Cursor position when the rotate operation started */\n    startRotatePos,\n    /** Bearing when current perspective rotate operation started */\n    startBearing,\n    /** Pitch when current perspective rotate operation started */\n    startPitch,\n    /** Zoom when current zoom operation started */\n    startZoom\n  }) {\n    assert(Number.isFinite(width), '`width` must be supplied');\n    assert(Number.isFinite(height), '`height` must be supplied');\n    assert(Number.isFinite(longitude), '`longitude` must be supplied');\n    assert(Number.isFinite(latitude), '`latitude` must be supplied');\n    assert(Number.isFinite(zoom), '`zoom` must be supplied');\n\n    this._viewportProps = this._applyConstraints({\n      width,\n      height,\n      latitude,\n      longitude,\n      zoom,\n      bearing,\n      pitch,\n      altitude,\n      maxZoom,\n      minZoom,\n      maxPitch,\n      minPitch,\n      transitionDuration,\n      transitionEasing,\n      transitionInterpolator,\n      transitionInterruption\n    });\n\n    this._state = {\n      startPanLngLat,\n      startZoomLngLat,\n      startRotatePos,\n      startBearing,\n      startPitch,\n      startZoom\n    };\n  }\n\n  /* Public API */\n\n  getViewportProps() {\n    return this._viewportProps;\n  }\n\n  getState() {\n    return this._state;\n  }\n\n  /**\n   * Start panning\n   * @param {Object} params\n   * @param {[Number, Number]} params.pos - position on screen where the pointer grabs\n   */\n  panStart({pos}) {\n    return this._getUpdatedMapState({\n      startPanLngLat: this._unproject(pos)\n    });\n  }\n\n  /**\n   * Pan\n   * @param {Object} params\n   * @param {[Number, Number]} params.pos - position on screen where the pointer is\n   * @param {[Number, Number]} [params.startPos] - where the pointer grabbed at\n   *   the start of the operation. Must be supplied of `panStart()` was not called\n   */\n  pan({pos, startPos}) {\n    const startPanLngLat = this._state.startPanLngLat || this._unproject(startPos);\n\n    if (!startPanLngLat) {\n      return this;\n    }\n\n    const [longitude, latitude] = this._calculateNewLngLat({\n      startPanLngLat,\n      pos\n    });\n\n    return this._getUpdatedMapState({\n      longitude,\n      latitude\n    });\n  }\n\n  /**\n   * End panning\n   * Must call if `panStart()` was called\n   */\n  panEnd() {\n    return this._getUpdatedMapState({\n      startPanLngLat: null\n    });\n  }\n\n  /**\n   * Start rotating\n   * @param {Object} params\n   * @param {[Number, Number]} params.pos - position on screen where the center is\n   */\n  rotateStart({pos}) {\n    return this._getUpdatedMapState({\n      startRotatePos: pos,\n      startBearing: this._viewportProps.bearing,\n      startPitch: this._viewportProps.pitch\n    });\n  }\n\n  /**\n   * Rotate\n   * @param {Object} params\n   * @param {[Number, Number]} params.pos - position on screen where the center is\n   * @param {Number} params.deltaAngleX - the change to bearing.\n   * @param {Number} params.deltaAngleY - the change to pitch.\n   */\n  rotate({pos, deltaAngleX = 0, deltaAngleY = 0}) {\n    const {startRotatePos, startBearing, startPitch} = this._state;\n\n    if (!Number.isFinite(startBearing) || !Number.isFinite(startPitch)) {\n      return this;\n    }\n\n    let newRotation;\n    if (pos) {\n      newRotation = this._calculateNewPitchAndBearing({\n        ...this._getRotationParams(pos, startRotatePos),\n        startBearing,\n        startPitch\n      });\n    } else {\n      newRotation = {\n        bearing: startBearing + deltaAngleX,\n        pitch: startPitch + deltaAngleY\n      };\n    }\n\n    return this._getUpdatedMapState(newRotation);\n  }\n\n  /**\n   * End rotating\n   * Must call if `rotateStart()` was called\n   */\n  rotateEnd() {\n    return this._getUpdatedMapState({\n      startBearing: null,\n      startPitch: null\n    });\n  }\n\n  /**\n   * Start zooming\n   * @param {Object} params\n   * @param {[Number, Number]} params.pos - position on screen where the center is\n   */\n  zoomStart({pos}) {\n    return this._getUpdatedMapState({\n      startZoomLngLat: this._unproject(pos),\n      startZoom: this._viewportProps.zoom\n    });\n  }\n\n  /**\n   * Zoom\n   * @param {Object} params\n   * @param {[Number, Number]} params.pos - position on screen where the current center is\n   * @param {[Number, Number]} [params.startPos] - the center position at\n   *   the start of the operation. Must be supplied of `zoomStart()` was not called\n   * @param {Number} params.scale - a number between [0, 1] specifying the accumulated\n   *   relative scale.\n   */\n  zoom({pos, startPos, scale}) {\n    assert(scale > 0, '`scale` must be a positive number');\n\n    // Make sure we zoom around the current mouse position rather than map center\n    let {startZoom, startZoomLngLat} = this._state;\n\n    if (!Number.isFinite(startZoom)) {\n      // We have two modes of zoom:\n      // scroll zoom that are discrete events (transform from the current zoom level),\n      // and pinch zoom that are continuous events (transform from the zoom level when\n      // pinch started).\n      // If startZoom state is defined, then use the startZoom state;\n      // otherwise assume discrete zooming\n      startZoom = this._viewportProps.zoom;\n      startZoomLngLat = this._unproject(startPos) || this._unproject(pos);\n    }\n\n    // take the start lnglat and put it where the mouse is down.\n    assert(\n      startZoomLngLat,\n      '`startZoomLngLat` prop is required ' +\n        'for zoom behavior to calculate where to position the map.'\n    );\n\n    const zoom = this._calculateNewZoom({scale, startZoom: startZoom || 0});\n\n    const zoomedViewport = new WebMercatorViewport(Object.assign({}, this._viewportProps, {zoom}));\n    const [longitude, latitude] = zoomedViewport.getMapCenterByLngLatPosition({\n      lngLat: startZoomLngLat,\n      pos\n    });\n\n    return this._getUpdatedMapState({\n      zoom,\n      longitude,\n      latitude\n    });\n  }\n\n  /**\n   * End zooming\n   * Must call if `zoomStart()` was called\n   */\n  zoomEnd() {\n    return this._getUpdatedMapState({\n      startZoomLngLat: null,\n      startZoom: null\n    });\n  }\n\n  /* Private methods */\n\n  _getUpdatedMapState(newProps) {\n    // Update _viewportProps\n    return new MapState(Object.assign({}, this._viewportProps, this._state, newProps));\n  }\n\n  // Apply any constraints (mathematical or defined by _viewportProps) to map state\n  _applyConstraints(props) {\n    // Ensure zoom is within specified range\n    const {maxZoom, minZoom, zoom} = props;\n    props.zoom = clamp(zoom, minZoom, maxZoom);\n\n    // Ensure pitch is within specified range\n    const {maxPitch, minPitch, pitch} = props;\n    props.pitch = clamp(pitch, minPitch, maxPitch);\n\n    Object.assign(props, normalizeViewportProps(props));\n\n    return props;\n  }\n\n  _unproject(pos) {\n    const viewport = new WebMercatorViewport(this._viewportProps);\n    return pos && viewport.unproject(pos);\n  }\n\n  // Calculate a new lnglat based on pixel dragging position\n  _calculateNewLngLat({startPanLngLat, pos}) {\n    const viewport = new WebMercatorViewport(this._viewportProps);\n    return viewport.getMapCenterByLngLatPosition({\n      lngLat: startPanLngLat,\n      pos\n    });\n  }\n\n  // Calculates new zoom\n  _calculateNewZoom({scale, startZoom}) {\n    const {maxZoom, minZoom} = this._viewportProps;\n    const zoom = startZoom + Math.log2(scale);\n    return clamp(zoom, minZoom, maxZoom);\n  }\n\n  // Calculates a new pitch and bearing from a position (coming from an event)\n  _calculateNewPitchAndBearing({deltaScaleX, deltaScaleY, startBearing, startPitch}) {\n    // clamp deltaScaleY to [-1, 1] so that rotation is constrained between minPitch and maxPitch.\n    // deltaScaleX does not need to be clamped as bearing does not have constraints.\n    deltaScaleY = clamp(deltaScaleY, -1, 1);\n\n    const {minPitch, maxPitch} = this._viewportProps;\n\n    const bearing = startBearing + 180 * deltaScaleX;\n    let pitch = startPitch;\n    if (deltaScaleY > 0) {\n      // Gradually increase pitch\n      pitch = startPitch + deltaScaleY * (maxPitch - startPitch);\n    } else if (deltaScaleY < 0) {\n      // Gradually decrease pitch\n      pitch = startPitch - deltaScaleY * (minPitch - startPitch);\n    }\n\n    return {\n      pitch,\n      bearing\n    };\n  }\n\n  _getRotationParams(pos, startPos) {\n    const deltaX = pos[0] - startPos[0];\n    const deltaY = pos[1] - startPos[1];\n    const centerY = pos[1];\n    const startY = startPos[1];\n    const {width, height} = this._viewportProps;\n\n    const deltaScaleX = deltaX / width;\n    let deltaScaleY = 0;\n\n    if (deltaY > 0) {\n      if (Math.abs(height - startY) > PITCH_MOUSE_THRESHOLD) {\n        // Move from 0 to -1 as we drag upwards\n        deltaScaleY = (deltaY / (startY - height)) * PITCH_ACCEL;\n      }\n    } else if (deltaY < 0) {\n      if (startY > PITCH_MOUSE_THRESHOLD) {\n        // Move from 0 to 1 as we drag upwards\n        deltaScaleY = 1 - centerY / startY;\n      }\n    }\n    deltaScaleY = Math.min(1, Math.max(-1, deltaScaleY));\n    return {deltaScaleX, deltaScaleY};\n  }\n}\n"],"mappings":"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"}