{"version":3,"file":"map-controller.js","names":["MapState","LinearInterpolator","TransitionManager","TRANSITION_EVENTS","NO_TRANSITION_PROPS","transitionDuration","LINEAR_TRANSITION_PROPS","transitionEasing","t","transitionInterpolator","transitionInterruption","BREAK","DEFAULT_INERTIA","INERTIA_EASING","EVENT_TYPES","WHEEL","PAN","PINCH","TRIPLE_PAN","DOUBLE_TAP","KEYBOARD","MapController","constructor","isDragging","newState","Object","assign","_interactionState","onStateChange","newViewport","oldViewport","onViewportChange","handleEvent","bind","_transitionManager","_onTransition","_setInteractionState","event","mapState","getMapState","eventStartBlocked","_eventStartBlocked","type","_onPanStart","_onPan","_onPanEnd","_onPinchStart","_onPinch","_onPinchEnd","_onTriplePanStart","_onTriplePan","_onTriplePanEnd","_onDoubleTap","_onWheel","_onKeyDown","getCenter","offsetCenter","x","y","isFunctionKeyPressed","srcEvent","Boolean","metaKey","altKey","ctrlKey","shiftKey","blockEvents","timeout","timer","setTimeout","updateViewport","newMapState","extraProps","interactionState","getViewportProps","viewStateChanged","keys","some","key","_state","getState","overrides","mapStateProps","setOptions","options","eventManager","isInteractive","scrollZoom","dragPan","dragRotate","doubleClickZoom","touchZoom","touchRotate","keyboard","prevOptions","dimensionChanged","height","width","processViewportChange","_events","toggleEvents","events","eventNames","enabled","forEach","eventName","on","off","pos","_panRotate","rightButton","rotateStart","panStart","_onPanRotate","_onPanMove","_onPanRotateEnd","_onPanMoveEnd","pan","isPanning","inertia","velocity","endPos","velocityX","velocityY","newControllerState","panEnd","rotate","isRotating","rotateEnd","speed","smooth","preventDefault","delta","scale","Math","exp","abs","zoom","around","isZooming","zoomStart","_startPinchRotation","rotation","_lastPinchEvent","deltaAngleX","z","log2","velocityZ","deltaTime","endScale","pow","zoomEnd","startPinchRotation","deltaX","isZoomOut","funcKey","zoomSpeed","moveSpeed","rotateSpeedX","rotateSpeedY","keyCode","bearing","startPos","pitch"],"sources":["../../../src/utils/map-controller.js"],"sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable complexity, max-statements */\nimport MapState from './map-state';\nimport {LinearInterpolator} from './transition';\nimport TransitionManager, {TRANSITION_EVENTS} from './transition-manager';\n\nconst NO_TRANSITION_PROPS = {\n  transitionDuration: 0\n};\nexport const LINEAR_TRANSITION_PROPS = {\n  transitionDuration: 300,\n  transitionEasing: t => t,\n  transitionInterpolator: new LinearInterpolator(),\n  transitionInterruption: TRANSITION_EVENTS.BREAK\n};\n\n// EVENT HANDLING PARAMETERS\nconst DEFAULT_INERTIA = 300;\nconst INERTIA_EASING = t => 1 - (1 - t) * (1 - t);\n\nconst EVENT_TYPES = {\n  WHEEL: ['wheel'],\n  PAN: ['panstart', 'panmove', 'panend'],\n  PINCH: ['pinchstart', 'pinchmove', 'pinchend'],\n  TRIPLE_PAN: ['tripanstart', 'tripanmove', 'tripanend'],\n  DOUBLE_TAP: ['doubletap'],\n  KEYBOARD: ['keydown']\n};\n\n/**\n * @classdesc\n * A class that handles events and updates mercator style viewport parameters\n */\nexport default class MapController {\n  events = [];\n  scrollZoom = true;\n  dragPan = true;\n  dragRotate = true;\n  doubleClickZoom = true;\n  touchZoom = true;\n  touchRotate = false;\n  keyboard = true;\n\n  _interactionState = {\n    isDragging: false\n  };\n  _events = {};\n\n  constructor() {\n    this.handleEvent = this.handleEvent.bind(this);\n    this._transitionManager = new TransitionManager({\n      onViewportChange: this._onTransition,\n      onStateChange: this._setInteractionState\n    });\n  }\n\n  /**\n   * Callback for events\n   * @param {object} event - a mjolnir.js Event\n   */\n  handleEvent(event) {\n    this.mapState = this.getMapState();\n    const eventStartBlocked = this._eventStartBlocked;\n\n    switch (event.type) {\n      case 'panstart':\n        return eventStartBlocked ? false : this._onPanStart(event);\n      case 'panmove':\n        return this._onPan(event);\n      case 'panend':\n        return this._onPanEnd(event);\n      case 'pinchstart':\n        return eventStartBlocked ? false : this._onPinchStart(event);\n      case 'pinchmove':\n        return this._onPinch(event);\n      case 'pinchend':\n        return this._onPinchEnd(event);\n      case 'tripanstart':\n        return eventStartBlocked ? false : this._onTriplePanStart(event);\n      case 'tripanmove':\n        return this._onTriplePan(event);\n      case 'tripanend':\n        return this._onTriplePanEnd(event);\n      case 'doubletap':\n        return this._onDoubleTap(event);\n      case 'wheel':\n        return this._onWheel(event);\n      case 'keydown':\n        return this._onKeyDown(event);\n      default:\n        return false;\n    }\n  }\n\n  /* Event utils */\n  // Event object: http://hammerjs.github.io/api/#event-object\n  getCenter(event) {\n    const {\n      offsetCenter: {x, y}\n    } = event;\n    return [x, y];\n  }\n\n  isFunctionKeyPressed(event) {\n    const {srcEvent} = event;\n    return Boolean(srcEvent.metaKey || srcEvent.altKey || srcEvent.ctrlKey || srcEvent.shiftKey);\n  }\n\n  // When a multi-touch event ends, e.g. pinch, not all pointers are lifted at the same time.\n  // This triggers a brief `pan` event.\n  // Calling this method will temporarily disable *start events to avoid conflicting transitions.\n  blockEvents(timeout) {\n    /* global setTimeout */\n    const timer = setTimeout(() => {\n      if (this._eventStartBlocked === timer) {\n        this._eventStartBlocked = null;\n      }\n    }, timeout);\n    this._eventStartBlocked = timer;\n  }\n\n  /* Callback util */\n  // formats map state and invokes callback function\n  updateViewport(newMapState, extraProps, interactionState) {\n    // Always trigger callback on initial update (resize)\n    const oldViewport =\n      this.mapState instanceof MapState ? this.mapState.getViewportProps() : this.mapState;\n    const newViewport = {...newMapState.getViewportProps(), ...extraProps};\n\n    const viewStateChanged = Object.keys(newViewport).some(\n      key => oldViewport[key] !== newViewport[key]\n    );\n\n    this._state = newMapState.getState();\n    this._setInteractionState(interactionState);\n\n    // viewState has changed\n    if (viewStateChanged) {\n      this.onViewportChange(newViewport, this._interactionState, oldViewport);\n    }\n  }\n\n  _setInteractionState = newState => {\n    Object.assign(this._interactionState, newState);\n    if (this.onStateChange) {\n      this.onStateChange(this._interactionState);\n    }\n  };\n\n  _onTransition = (newViewport, oldViewport) => {\n    this.onViewportChange(newViewport, this._interactionState, oldViewport);\n  };\n\n  getMapState(overrides) {\n    return new MapState({...this.mapStateProps, ...this._state, ...overrides});\n  }\n\n  isDragging() {\n    return this._interactionState.isDragging;\n  }\n\n  /**\n   * Extract interactivity options\n   */\n  setOptions(options) {\n    const {\n      onViewportChange,\n      onStateChange,\n      eventManager = this.eventManager,\n\n      isInteractive = true,\n      scrollZoom = this.scrollZoom,\n      dragPan = this.dragPan,\n      dragRotate = this.dragRotate,\n      doubleClickZoom = this.doubleClickZoom,\n      touchZoom = this.touchZoom,\n      touchRotate = this.touchRotate,\n      keyboard = this.keyboard\n    } = options;\n\n    this.onViewportChange = onViewportChange;\n    this.onStateChange = onStateChange;\n\n    const prevOptions = this.mapStateProps || {};\n    const dimensionChanged =\n      prevOptions.height !== options.height || prevOptions.width !== options.width;\n\n    this.mapStateProps = options;\n\n    if (dimensionChanged) {\n      // Dimensions changed, normalize the props and fire change event\n      this.mapState = prevOptions;\n      this.updateViewport(new MapState(options));\n    }\n    // Update transition\n    this._transitionManager.processViewportChange(options);\n\n    if (this.eventManager !== eventManager) {\n      // EventManager has changed\n      this.eventManager = eventManager;\n      this._events = {};\n      this.toggleEvents(this.events, true);\n    }\n\n    // Register/unregister events\n    this.toggleEvents(EVENT_TYPES.WHEEL, isInteractive && Boolean(scrollZoom));\n    this.toggleEvents(EVENT_TYPES.PAN, isInteractive && Boolean(dragPan || dragRotate));\n    this.toggleEvents(EVENT_TYPES.PINCH, isInteractive && Boolean(touchZoom || touchRotate));\n    this.toggleEvents(EVENT_TYPES.TRIPLE_PAN, isInteractive && Boolean(touchRotate));\n    this.toggleEvents(EVENT_TYPES.DOUBLE_TAP, isInteractive && Boolean(doubleClickZoom));\n    this.toggleEvents(EVENT_TYPES.KEYBOARD, isInteractive && Boolean(keyboard));\n\n    // Interaction toggles\n    this.scrollZoom = scrollZoom;\n    this.dragPan = dragPan;\n    this.dragRotate = dragRotate;\n    this.doubleClickZoom = doubleClickZoom;\n    this.touchZoom = touchZoom;\n    this.touchRotate = touchRotate;\n    this.keyboard = keyboard;\n  }\n\n  toggleEvents(eventNames, enabled) {\n    if (this.eventManager) {\n      eventNames.forEach(eventName => {\n        if (this._events[eventName] !== enabled) {\n          this._events[eventName] = enabled;\n          if (enabled) {\n            this.eventManager.on(eventName, this.handleEvent);\n          } else {\n            this.eventManager.off(eventName, this.handleEvent);\n          }\n        }\n      });\n    }\n  }\n\n  /* Event handlers */\n  // Default handler for the `panstart` event.\n  _onPanStart(event) {\n    const pos = this.getCenter(event);\n    this._panRotate = this.isFunctionKeyPressed(event) || event.rightButton;\n    const newMapState = this._panRotate\n      ? this.mapState.rotateStart({pos})\n      : this.mapState.panStart({pos});\n    this.updateViewport(newMapState, NO_TRANSITION_PROPS, {isDragging: true});\n    return true;\n  }\n\n  // Default handler for the `panmove` event.\n  _onPan(event) {\n    if (!this.isDragging()) {\n      return false;\n    }\n    return this._panRotate ? this._onPanRotate(event) : this._onPanMove(event);\n  }\n\n  // Default handler for the `panend` event.\n  _onPanEnd(event) {\n    if (!this.isDragging()) {\n      return false;\n    }\n    return this._panRotate ? this._onPanRotateEnd(event) : this._onPanMoveEnd(event);\n  }\n\n  // Default handler for panning to move.\n  // Called by `_onPan` when panning without function key pressed.\n  _onPanMove(event) {\n    if (!this.dragPan) {\n      return false;\n    }\n    const pos = this.getCenter(event);\n    const newMapState = this.mapState.pan({pos});\n    this.updateViewport(newMapState, NO_TRANSITION_PROPS, {isPanning: true});\n    return true;\n  }\n\n  _onPanMoveEnd(event) {\n    if (this.dragPan) {\n      const {inertia = DEFAULT_INERTIA} = this.dragPan;\n      if (inertia && event.velocity) {\n        const pos = this.getCenter(event);\n        const endPos = [\n          pos[0] + (event.velocityX * inertia) / 2,\n          pos[1] + (event.velocityY * inertia) / 2\n        ];\n        const newControllerState = this.mapState.pan({pos: endPos}).panEnd();\n        this.updateViewport(\n          newControllerState,\n          {\n            ...LINEAR_TRANSITION_PROPS,\n            transitionDuration: inertia,\n            transitionEasing: INERTIA_EASING\n          },\n          {\n            isDragging: false,\n            isPanning: true\n          }\n        );\n        return true;\n      }\n    }\n    const newMapState = this.mapState.panEnd();\n    this.updateViewport(newMapState, null, {\n      isDragging: false,\n      isPanning: false\n    });\n    return true;\n  }\n\n  // Default handler for panning to rotate.\n  // Called by `_onPan` when panning with function key pressed.\n  _onPanRotate(event) {\n    if (!this.dragRotate) {\n      return false;\n    }\n\n    const pos = this.getCenter(event);\n    const newMapState = this.mapState.rotate({pos});\n    this.updateViewport(newMapState, NO_TRANSITION_PROPS, {isRotating: true});\n    return true;\n  }\n\n  _onPanRotateEnd(event) {\n    if (this.dragRotate) {\n      const {inertia = DEFAULT_INERTIA} = this.dragRotate;\n      if (inertia && event.velocity) {\n        const pos = this.getCenter(event);\n        const endPos = [\n          pos[0] + (event.velocityX * inertia) / 2,\n          pos[1] + (event.velocityY * inertia) / 2\n        ];\n        const newControllerState = this.mapState.rotate({pos: endPos}).rotateEnd();\n        this.updateViewport(\n          newControllerState,\n          {\n            ...LINEAR_TRANSITION_PROPS,\n            transitionDuration: inertia,\n            transitionEasing: INERTIA_EASING\n          },\n          {\n            isDragging: false,\n            isRotating: true\n          }\n        );\n        return true;\n      }\n    }\n    const newMapState = this.mapState.panEnd();\n    this.updateViewport(newMapState, null, {\n      isDragging: false,\n      isRotating: false\n    });\n    return true;\n  }\n\n  // Default handler for the `wheel` event.\n  _onWheel(event) {\n    if (!this.scrollZoom) {\n      return false;\n    }\n\n    const {speed = 0.01, smooth = false} = this.scrollZoom;\n\n    event.preventDefault();\n\n    const pos = this.getCenter(event);\n    const {delta} = event;\n\n    // Map wheel delta to relative scale\n    let scale = 2 / (1 + Math.exp(-Math.abs(delta * speed)));\n    if (delta < 0 && scale !== 0) {\n      scale = 1 / scale;\n    }\n\n    const newMapState = this.mapState.zoom({pos, scale});\n    this.updateViewport(\n      newMapState,\n      {\n        ...LINEAR_TRANSITION_PROPS,\n        transitionInterpolator: new LinearInterpolator({around: pos}),\n        transitionDuration: smooth ? 250 : 1\n      },\n      {\n        isPanning: true,\n        isZooming: true\n      }\n    );\n    return true;\n  }\n\n  // Default handler for the `pinchstart` event.\n  _onPinchStart(event) {\n    const pos = this.getCenter(event);\n    const newMapState = this.mapState.zoomStart({pos}).rotateStart({pos});\n    // hack - hammer's `rotation` field doesn't seem to produce the correct angle\n    this._startPinchRotation = event.rotation;\n    this._lastPinchEvent = event;\n    this.updateViewport(newMapState, NO_TRANSITION_PROPS, {isDragging: true});\n    return true;\n  }\n\n  // Default handler for the `pinch` event.\n  _onPinch(event) {\n    if (!this.isDragging()) {\n      return false;\n    }\n    if (!this.touchZoom && !this.touchRotate) {\n      return false;\n    }\n\n    let newMapState = this.mapState;\n    if (this.touchZoom) {\n      const {scale} = event;\n      const pos = this.getCenter(event);\n      newMapState = newMapState.zoom({pos, scale});\n    }\n    if (this.touchRotate) {\n      const {rotation} = event;\n      newMapState = newMapState.rotate({\n        deltaAngleX: this._startPinchRotation - rotation\n      });\n    }\n\n    this.updateViewport(newMapState, NO_TRANSITION_PROPS, {\n      isDragging: true,\n      isPanning: Boolean(this.touchZoom),\n      isZooming: Boolean(this.touchZoom),\n      isRotating: Boolean(this.touchRotate)\n    });\n    this._lastPinchEvent = event;\n    return true;\n  }\n\n  // Default handler for the `pinchend` event.\n  _onPinchEnd(event) {\n    if (!this.isDragging()) {\n      return false;\n    }\n    if (this.touchZoom) {\n      const {inertia = DEFAULT_INERTIA} = this.touchZoom;\n      const {_lastPinchEvent} = this;\n      if (inertia && _lastPinchEvent && event.scale !== _lastPinchEvent.scale) {\n        const pos = this.getCenter(event);\n        let newMapState = this.mapState.rotateEnd();\n        const z = Math.log2(event.scale);\n        const velocityZ =\n          (z - Math.log2(_lastPinchEvent.scale)) / (event.deltaTime - _lastPinchEvent.deltaTime);\n        const endScale = Math.pow(2, z + (velocityZ * inertia) / 2);\n        newMapState = newMapState.zoom({pos, scale: endScale}).zoomEnd();\n\n        this.updateViewport(\n          newMapState,\n          {\n            ...LINEAR_TRANSITION_PROPS,\n            transitionInterpolator: new LinearInterpolator({around: pos}),\n            transitionDuration: inertia,\n            transitionEasing: INERTIA_EASING\n          },\n          {\n            isDragging: false,\n            isPanning: Boolean(this.touchZoom),\n            isZooming: Boolean(this.touchZoom),\n            isRotating: false\n          }\n        );\n        this.blockEvents(inertia);\n        return true;\n      }\n    }\n\n    const newMapState = this.mapState.zoomEnd().rotateEnd();\n    this._state.startPinchRotation = 0;\n    this.updateViewport(newMapState, null, {\n      isDragging: false,\n      isPanning: false,\n      isZooming: false,\n      isRotating: false\n    });\n    this._startPinchRotation = null;\n    this._lastPinchEvent = null;\n    return true;\n  }\n\n  _onTriplePanStart(event) {\n    const pos = this.getCenter(event);\n    const newMapState = this.mapState.rotateStart({pos});\n    this.updateViewport(newMapState, NO_TRANSITION_PROPS, {isDragging: true});\n    return true;\n  }\n\n  _onTriplePan(event) {\n    if (!this.isDragging()) {\n      return false;\n    }\n    if (!this.touchRotate) {\n      return false;\n    }\n\n    const pos = this.getCenter(event);\n    pos[0] -= event.deltaX;\n\n    const newMapState = this.mapState.rotate({pos});\n    this.updateViewport(newMapState, NO_TRANSITION_PROPS, {isRotating: true});\n    return true;\n  }\n\n  _onTriplePanEnd(event) {\n    if (!this.isDragging()) {\n      return false;\n    }\n    if (this.touchRotate) {\n      const {inertia = DEFAULT_INERTIA} = this.touchRotate;\n      if (inertia && event.velocityY) {\n        const pos = this.getCenter(event);\n        const endPos = [pos[0], (pos[1] += (event.velocityY * inertia) / 2)];\n        const newMapState = this.mapState.rotate({pos: endPos});\n        this.updateViewport(\n          newMapState,\n          {\n            ...LINEAR_TRANSITION_PROPS,\n            transitionDuration: inertia,\n            transitionEasing: INERTIA_EASING\n          },\n          {\n            isDragging: false,\n            isRotating: true\n          }\n        );\n        this.blockEvents(inertia);\n        return false;\n      }\n    }\n    const newMapState = this.mapState.rotateEnd();\n    this.updateViewport(newMapState, null, {\n      isDragging: false,\n      isRotating: false\n    });\n    return true;\n  }\n\n  // Default handler for the `doubletap` event.\n  _onDoubleTap(event) {\n    if (!this.doubleClickZoom) {\n      return false;\n    }\n    const pos = this.getCenter(event);\n    const isZoomOut = this.isFunctionKeyPressed(event);\n\n    const newMapState = this.mapState.zoom({pos, scale: isZoomOut ? 0.5 : 2});\n    this.updateViewport(\n      newMapState,\n      Object.assign({}, LINEAR_TRANSITION_PROPS, {\n        transitionInterpolator: new LinearInterpolator({around: pos})\n      }),\n      {isZooming: true}\n    );\n    return true;\n  }\n\n  // Default handler for the `keydown` event\n  _onKeyDown(event) {\n    if (!this.keyboard) {\n      return false;\n    }\n    const funcKey = this.isFunctionKeyPressed(event);\n    const {zoomSpeed = 2, moveSpeed = 100, rotateSpeedX = 15, rotateSpeedY = 10} = this.keyboard;\n\n    const {mapStateProps} = this;\n    let newMapState;\n\n    switch (event.srcEvent.keyCode) {\n      case 189: // -\n        if (funcKey) {\n          newMapState = this.getMapState({zoom: mapStateProps.zoom - Math.log2(zoomSpeed) - 1});\n        } else {\n          newMapState = this.getMapState({zoom: mapStateProps.zoom - Math.log2(zoomSpeed)});\n        }\n        break;\n      case 187: // +\n        if (funcKey) {\n          newMapState = this.getMapState({zoom: mapStateProps.zoom + Math.log2(zoomSpeed) + 1});\n        } else {\n          newMapState = this.getMapState({zoom: mapStateProps.zoom + Math.log2(zoomSpeed)});\n        }\n        break;\n      case 37: // left\n        if (funcKey) {\n          newMapState = this.getMapState({\n            bearing: mapStateProps.bearing - rotateSpeedX\n          });\n        } else {\n          newMapState = this.mapState.pan({pos: [moveSpeed, 0], startPos: [0, 0]});\n        }\n        break;\n      case 39: // right\n        if (funcKey) {\n          newMapState = this.getMapState({\n            bearing: mapStateProps.bearing + rotateSpeedX\n          });\n        } else {\n          newMapState = this.mapState.pan({pos: [-moveSpeed, 0], startPos: [0, 0]});\n        }\n        break;\n      case 38: // up\n        if (funcKey) {\n          newMapState = this.getMapState({pitch: mapStateProps.pitch + rotateSpeedY});\n        } else {\n          newMapState = this.mapState.pan({pos: [0, moveSpeed], startPos: [0, 0]});\n        }\n        break;\n      case 40: // down\n        if (funcKey) {\n          newMapState = this.getMapState({pitch: mapStateProps.pitch - rotateSpeedY});\n        } else {\n          newMapState = this.mapState.pan({pos: [0, -moveSpeed], startPos: [0, 0]});\n        }\n        break;\n      default:\n        return false;\n    }\n    return this.updateViewport(newMapState, LINEAR_TRANSITION_PROPS);\n  }\n}\n"],"mappings":"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"}