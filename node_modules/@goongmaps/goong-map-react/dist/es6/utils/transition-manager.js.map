{"version":3,"file":"transition-manager.js","names":["assert","LinearInterpolator","MapState","noop","cropEasingFunction","easing","x0","y0","t","TRANSITION_EVENTS","BREAK","SNAP_TO_END","IGNORE","UPDATE","DEFAULT_PROPS","transitionDuration","transitionEasing","transitionInterpolator","transitionInterruption","onTransitionStart","onTransitionInterrupt","onTransitionEnd","TransitionManager","constructor","opts","_animationFrame","requestAnimationFrame","_onTransitionFrame","_updateViewport","props","onViewportChange","onStateChange","time","getTime","Date","now","getViewportInTransition","state","propsInTransition","processViewportChange","nextProps","currentProps","_shouldIgnoreViewportChange","_isTransitionEnabled","startProps","Object","assign","endProps","_isTransitionInProgress","interruption","currentTime","startTime","duration","_triggerTransition","_endTransition","Boolean","_isUpdateDueToCurrentTransition","interpolator","arePropsEqual","cancelAnimationFrame","getDuration","initialProps","initializeProps","interactionState","inTransition","isZooming","zoom","isPanning","longitude","latitude","isRotating","bearing","pitch","start","end","animation","shouldEnd","viewport","interpolateProps","mapState","getViewportProps"],"sources":["../../../src/utils/transition-manager.js"],"sourcesContent":["/* global requestAnimationFrame, cancelAnimationFrame */\nimport assert from './assert';\nimport {LinearInterpolator} from './transition';\nimport MapState from './map-state';\n\nconst noop = () => {};\n\n// crops the old easing function from x0 to 1 where x0 is the interruption point\n// returns a new easing function with domain [0, 1] and range [0, 1]\nexport function cropEasingFunction(easing, x0) {\n  const y0 = easing(x0);\n  return t => (1 / (1 - y0)) * (easing(t * (1 - x0) + x0) - y0);\n}\n\nexport const TRANSITION_EVENTS = {\n  BREAK: 1,\n  SNAP_TO_END: 2,\n  IGNORE: 3,\n  UPDATE: 4\n};\n\nconst DEFAULT_PROPS = {\n  transitionDuration: 0,\n  transitionEasing: t => t,\n  transitionInterpolator: new LinearInterpolator(),\n  transitionInterruption: TRANSITION_EVENTS.BREAK,\n  onTransitionStart: noop,\n  onTransitionInterrupt: noop,\n  onTransitionEnd: noop\n};\n\nexport default class TransitionManager {\n  static defaultProps = DEFAULT_PROPS;\n\n  constructor(opts = {}) {\n    this.props = null;\n    this.onViewportChange = opts.onViewportChange || noop;\n    this.onStateChange = opts.onStateChange || noop;\n    this.time = opts.getTime || Date.now;\n  }\n\n  _animationFrame = null;\n\n  // Returns current transitioned viewport.\n  getViewportInTransition() {\n    return this._animationFrame ? this.state.propsInTransition : null;\n  }\n\n  // Process the viewport change, either ignore or trigger a new transiton.\n  // Return true if a new transition is triggered, false otherwise.\n  processViewportChange(nextProps) {\n    const currentProps = this.props;\n    // Set this.props here as '_triggerTransition' calls '_updateViewport' that uses this.props.\n    this.props = nextProps;\n\n    // NOTE: Be cautious re-ordering statements in this function.\n    if (!currentProps || this._shouldIgnoreViewportChange(currentProps, nextProps)) {\n      return false;\n    }\n\n    if (this._isTransitionEnabled(nextProps)) {\n      const startProps = Object.assign({}, currentProps);\n      const endProps = Object.assign({}, nextProps);\n\n      if (this._isTransitionInProgress()) {\n        currentProps.onTransitionInterrupt();\n\n        if (this.state.interruption === TRANSITION_EVENTS.SNAP_TO_END) {\n          Object.assign(startProps, this.state.endProps);\n        } else {\n          Object.assign(startProps, this.state.propsInTransition);\n        }\n\n        if (this.state.interruption === TRANSITION_EVENTS.UPDATE) {\n          const currentTime = this.time();\n          const x0 = (currentTime - this.state.startTime) / this.state.duration;\n          endProps.transitionDuration = this.state.duration - (currentTime - this.state.startTime);\n          endProps.transitionEasing = cropEasingFunction(this.state.easing, x0);\n          endProps.transitionInterpolator = startProps.transitionInterpolator;\n        }\n      }\n      endProps.onTransitionStart();\n\n      this._triggerTransition(startProps, endProps);\n\n      return true;\n    }\n\n    if (this._isTransitionInProgress()) {\n      currentProps.onTransitionInterrupt();\n      this._endTransition();\n    }\n\n    return false;\n  }\n\n  // Helper methods\n\n  _isTransitionInProgress() {\n    return Boolean(this._animationFrame);\n  }\n\n  _isTransitionEnabled(props) {\n    const {transitionDuration, transitionInterpolator} = props;\n    return (\n      (transitionDuration > 0 || transitionDuration === 'auto') && Boolean(transitionInterpolator)\n    );\n  }\n\n  _isUpdateDueToCurrentTransition(props) {\n    if (this.state.propsInTransition) {\n      return this.state.interpolator.arePropsEqual(props, this.state.propsInTransition);\n    }\n    return false;\n  }\n\n  _shouldIgnoreViewportChange(currentProps, nextProps) {\n    if (!currentProps) {\n      return true;\n    }\n    if (this._isTransitionInProgress()) {\n      // Ignore update if it is requested to be ignored\n      return (\n        this.state.interruption === TRANSITION_EVENTS.IGNORE ||\n        // Ignore update if it is due to current active transition.\n        this._isUpdateDueToCurrentTransition(nextProps)\n      );\n    }\n    if (this._isTransitionEnabled(nextProps)) {\n      // Ignore if none of the viewport props changed.\n      return nextProps.transitionInterpolator.arePropsEqual(currentProps, nextProps);\n    }\n\n    return true;\n  }\n\n  _triggerTransition(startProps, endProps) {\n    assert(this._isTransitionEnabled(endProps));\n\n    if (this._animationFrame) {\n      cancelAnimationFrame(this._animationFrame);\n    }\n\n    // update transitionDuration for 'auto' mode\n    const {transitionInterpolator} = endProps;\n    const duration = transitionInterpolator.getDuration\n      ? transitionInterpolator.getDuration(startProps, endProps)\n      : endProps.transitionDuration;\n\n    if (duration === 0) {\n      return;\n    }\n\n    const initialProps = endProps.transitionInterpolator.initializeProps(startProps, endProps);\n\n    const interactionState = {\n      inTransition: true,\n      isZooming: startProps.zoom !== endProps.zoom,\n      isPanning:\n        startProps.longitude !== endProps.longitude || startProps.latitude !== endProps.latitude,\n      isRotating: startProps.bearing !== endProps.bearing || startProps.pitch !== endProps.pitch\n    };\n\n    this.state = {\n      // Save current transition props\n      duration,\n      easing: endProps.transitionEasing,\n      interpolator: endProps.transitionInterpolator,\n      interruption: endProps.transitionInterruption,\n\n      startTime: this.time(),\n      startProps: initialProps.start,\n      endProps: initialProps.end,\n      animation: null,\n      propsInTransition: {}\n    };\n    this._onTransitionFrame();\n    this.onStateChange(interactionState);\n  }\n\n  _onTransitionFrame = () => {\n    // _updateViewport() may cancel the animation\n    this._animationFrame = requestAnimationFrame(this._onTransitionFrame);\n    this._updateViewport();\n  };\n\n  _endTransition() {\n    if (this._animationFrame) {\n      cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = null;\n    }\n    this.onStateChange({\n      inTransition: false,\n      isZooming: false,\n      isPanning: false,\n      isRotating: false\n    });\n  }\n\n  _updateViewport() {\n    // NOTE: Be cautious re-ordering statements in this function.\n    const currentTime = this.time();\n    const {startTime, duration, easing, interpolator, startProps, endProps} = this.state;\n    let shouldEnd = false;\n    let t = (currentTime - startTime) / duration;\n    if (t >= 1) {\n      t = 1;\n      shouldEnd = true;\n    }\n    t = easing(t);\n\n    const viewport = interpolator.interpolateProps(startProps, endProps, t);\n    // Normalize viewport props\n    const mapState = new MapState(Object.assign({}, this.props, viewport));\n    this.state.propsInTransition = mapState.getViewportProps();\n\n    this.onViewportChange(this.state.propsInTransition, this.props);\n\n    if (shouldEnd) {\n      this._endTransition();\n      this.props.onTransitionEnd();\n    }\n  }\n}\n"],"mappings":"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"}