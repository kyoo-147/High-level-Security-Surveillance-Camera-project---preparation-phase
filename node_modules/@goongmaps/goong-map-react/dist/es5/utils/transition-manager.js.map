{"version":3,"file":"transition-manager.js","names":["noop","cropEasingFunction","easing","x0","y0","t","TRANSITION_EVENTS","BREAK","SNAP_TO_END","IGNORE","UPDATE","DEFAULT_PROPS","transitionDuration","transitionEasing","transitionInterpolator","LinearInterpolator","transitionInterruption","onTransitionStart","onTransitionInterrupt","onTransitionEnd","TransitionManager","opts","_animationFrame","requestAnimationFrame","_onTransitionFrame","_updateViewport","props","onViewportChange","onStateChange","time","getTime","Date","now","state","propsInTransition","nextProps","currentProps","_shouldIgnoreViewportChange","_isTransitionEnabled","startProps","Object","assign","endProps","_isTransitionInProgress","interruption","currentTime","startTime","duration","_triggerTransition","_endTransition","Boolean","interpolator","arePropsEqual","_isUpdateDueToCurrentTransition","assert","cancelAnimationFrame","getDuration","initialProps","initializeProps","interactionState","inTransition","isZooming","zoom","isPanning","longitude","latitude","isRotating","bearing","pitch","start","end","animation","shouldEnd","viewport","interpolateProps","mapState","MapState","getViewportProps"],"sources":["../../../src/utils/transition-manager.js"],"sourcesContent":["/* global requestAnimationFrame, cancelAnimationFrame */\nimport assert from './assert';\nimport {LinearInterpolator} from './transition';\nimport MapState from './map-state';\n\nconst noop = () => {};\n\n// crops the old easing function from x0 to 1 where x0 is the interruption point\n// returns a new easing function with domain [0, 1] and range [0, 1]\nexport function cropEasingFunction(easing, x0) {\n  const y0 = easing(x0);\n  return t => (1 / (1 - y0)) * (easing(t * (1 - x0) + x0) - y0);\n}\n\nexport const TRANSITION_EVENTS = {\n  BREAK: 1,\n  SNAP_TO_END: 2,\n  IGNORE: 3,\n  UPDATE: 4\n};\n\nconst DEFAULT_PROPS = {\n  transitionDuration: 0,\n  transitionEasing: t => t,\n  transitionInterpolator: new LinearInterpolator(),\n  transitionInterruption: TRANSITION_EVENTS.BREAK,\n  onTransitionStart: noop,\n  onTransitionInterrupt: noop,\n  onTransitionEnd: noop\n};\n\nexport default class TransitionManager {\n  static defaultProps = DEFAULT_PROPS;\n\n  constructor(opts = {}) {\n    this.props = null;\n    this.onViewportChange = opts.onViewportChange || noop;\n    this.onStateChange = opts.onStateChange || noop;\n    this.time = opts.getTime || Date.now;\n  }\n\n  _animationFrame = null;\n\n  // Returns current transitioned viewport.\n  getViewportInTransition() {\n    return this._animationFrame ? this.state.propsInTransition : null;\n  }\n\n  // Process the viewport change, either ignore or trigger a new transiton.\n  // Return true if a new transition is triggered, false otherwise.\n  processViewportChange(nextProps) {\n    const currentProps = this.props;\n    // Set this.props here as '_triggerTransition' calls '_updateViewport' that uses this.props.\n    this.props = nextProps;\n\n    // NOTE: Be cautious re-ordering statements in this function.\n    if (!currentProps || this._shouldIgnoreViewportChange(currentProps, nextProps)) {\n      return false;\n    }\n\n    if (this._isTransitionEnabled(nextProps)) {\n      const startProps = Object.assign({}, currentProps);\n      const endProps = Object.assign({}, nextProps);\n\n      if (this._isTransitionInProgress()) {\n        currentProps.onTransitionInterrupt();\n\n        if (this.state.interruption === TRANSITION_EVENTS.SNAP_TO_END) {\n          Object.assign(startProps, this.state.endProps);\n        } else {\n          Object.assign(startProps, this.state.propsInTransition);\n        }\n\n        if (this.state.interruption === TRANSITION_EVENTS.UPDATE) {\n          const currentTime = this.time();\n          const x0 = (currentTime - this.state.startTime) / this.state.duration;\n          endProps.transitionDuration = this.state.duration - (currentTime - this.state.startTime);\n          endProps.transitionEasing = cropEasingFunction(this.state.easing, x0);\n          endProps.transitionInterpolator = startProps.transitionInterpolator;\n        }\n      }\n      endProps.onTransitionStart();\n\n      this._triggerTransition(startProps, endProps);\n\n      return true;\n    }\n\n    if (this._isTransitionInProgress()) {\n      currentProps.onTransitionInterrupt();\n      this._endTransition();\n    }\n\n    return false;\n  }\n\n  // Helper methods\n\n  _isTransitionInProgress() {\n    return Boolean(this._animationFrame);\n  }\n\n  _isTransitionEnabled(props) {\n    const {transitionDuration, transitionInterpolator} = props;\n    return (\n      (transitionDuration > 0 || transitionDuration === 'auto') && Boolean(transitionInterpolator)\n    );\n  }\n\n  _isUpdateDueToCurrentTransition(props) {\n    if (this.state.propsInTransition) {\n      return this.state.interpolator.arePropsEqual(props, this.state.propsInTransition);\n    }\n    return false;\n  }\n\n  _shouldIgnoreViewportChange(currentProps, nextProps) {\n    if (!currentProps) {\n      return true;\n    }\n    if (this._isTransitionInProgress()) {\n      // Ignore update if it is requested to be ignored\n      return (\n        this.state.interruption === TRANSITION_EVENTS.IGNORE ||\n        // Ignore update if it is due to current active transition.\n        this._isUpdateDueToCurrentTransition(nextProps)\n      );\n    }\n    if (this._isTransitionEnabled(nextProps)) {\n      // Ignore if none of the viewport props changed.\n      return nextProps.transitionInterpolator.arePropsEqual(currentProps, nextProps);\n    }\n\n    return true;\n  }\n\n  _triggerTransition(startProps, endProps) {\n    assert(this._isTransitionEnabled(endProps));\n\n    if (this._animationFrame) {\n      cancelAnimationFrame(this._animationFrame);\n    }\n\n    // update transitionDuration for 'auto' mode\n    const {transitionInterpolator} = endProps;\n    const duration = transitionInterpolator.getDuration\n      ? transitionInterpolator.getDuration(startProps, endProps)\n      : endProps.transitionDuration;\n\n    if (duration === 0) {\n      return;\n    }\n\n    const initialProps = endProps.transitionInterpolator.initializeProps(startProps, endProps);\n\n    const interactionState = {\n      inTransition: true,\n      isZooming: startProps.zoom !== endProps.zoom,\n      isPanning:\n        startProps.longitude !== endProps.longitude || startProps.latitude !== endProps.latitude,\n      isRotating: startProps.bearing !== endProps.bearing || startProps.pitch !== endProps.pitch\n    };\n\n    this.state = {\n      // Save current transition props\n      duration,\n      easing: endProps.transitionEasing,\n      interpolator: endProps.transitionInterpolator,\n      interruption: endProps.transitionInterruption,\n\n      startTime: this.time(),\n      startProps: initialProps.start,\n      endProps: initialProps.end,\n      animation: null,\n      propsInTransition: {}\n    };\n    this._onTransitionFrame();\n    this.onStateChange(interactionState);\n  }\n\n  _onTransitionFrame = () => {\n    // _updateViewport() may cancel the animation\n    this._animationFrame = requestAnimationFrame(this._onTransitionFrame);\n    this._updateViewport();\n  };\n\n  _endTransition() {\n    if (this._animationFrame) {\n      cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = null;\n    }\n    this.onStateChange({\n      inTransition: false,\n      isZooming: false,\n      isPanning: false,\n      isRotating: false\n    });\n  }\n\n  _updateViewport() {\n    // NOTE: Be cautious re-ordering statements in this function.\n    const currentTime = this.time();\n    const {startTime, duration, easing, interpolator, startProps, endProps} = this.state;\n    let shouldEnd = false;\n    let t = (currentTime - startTime) / duration;\n    if (t >= 1) {\n      t = 1;\n      shouldEnd = true;\n    }\n    t = easing(t);\n\n    const viewport = interpolator.interpolateProps(startProps, endProps, t);\n    // Normalize viewport props\n    const mapState = new MapState(Object.assign({}, this.props, viewport));\n    this.state.propsInTransition = mapState.getViewportProps();\n\n    this.onViewportChange(this.state.propsInTransition, this.props);\n\n    if (shouldEnd) {\n      this._endTransition();\n      this.props.onTransitionEnd();\n    }\n  }\n}\n"],"mappings":"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"}