{"version":3,"file":"transition-interpolator.js","names":["equals","assert","TransitionInterpolator","currentProps","nextProps","propNames","key","startProps","endProps","start","end","t","transitionDuration"],"sources":["../../../../src/utils/transition/transition-interpolator.js"],"sourcesContent":["import {equals} from '../math-utils';\nimport assert from '../assert';\n\nexport default class TransitionInterpolator {\n  propNames = [];\n\n  /**\n   * Checks if two sets of props need transition in between\n   * @param currentProps {object} - a list of viewport props\n   * @param nextProps {object} - a list of viewport props\n   * @returns {boolean} - true if two props are equivalent\n   */\n  arePropsEqual(currentProps, nextProps) {\n    for (const key of this.propNames || []) {\n      if (!equals(currentProps[key], nextProps[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Called before transition starts to validate/pre-process start and end props\n   * @param startProps {object} - a list of starting viewport props\n   * @param endProps {object} - a list of target viewport props\n   * @returns {Object} {start, end} - start and end props to be passed\n   *   to `interpolateProps`\n   */\n  initializeProps(startProps, endProps) {\n    return {start: startProps, end: endProps};\n  }\n\n  /**\n   * Returns viewport props in transition\n   * @param startProps {object} - a list of starting viewport props\n   * @param endProps {object} - a list of target viewport props\n   * @param t {number} - a time factor between [0, 1]\n   * @returns {object} - a list of interpolated viewport props\n   */\n  interpolateProps(startProps, endProps, t) {\n    assert(false, 'interpolateProps is not implemented');\n  }\n\n  /**\n   * Returns transition duration\n   * @param startProps {object} - a list of starting viewport props\n   * @param endProps {object} - a list of target viewport props\n   * @returns {Number} - transition duration in milliseconds\n   */\n  getDuration(startProps, endProps) {\n    return endProps.transitionDuration;\n  }\n}\n"],"mappings":";;;;;;AAAA,SAAQA,MAAM,QAAO,eAAe;AACpC,OAAOC,MAAM,MAAM,WAAW;AAAC,IAEVC,sBAAsB;EAAA;IAAA;IAAA,mCAC7B,EAAE;EAAA;EAAA;IAAA;IAAA,OAQd,uBAAcC,YAAY,EAAEC,SAAS,EAAE;MAAA,2CACnB,IAAI,CAACC,SAAS,IAAI,EAAE;QAAA;MAAA;QAAtC,oDAAwC;UAAA,IAA7BC,GAAG;UACZ,IAAI,CAACN,MAAM,CAACG,YAAY,CAACG,GAAG,CAAC,EAAEF,SAAS,CAACE,GAAG,CAAC,CAAC,EAAE;YAC9C,OAAO,KAAK;UACd;QACF;MAAC;QAAA;MAAA;QAAA;MAAA;MACD,OAAO,IAAI;IACb;EAAC;IAAA;IAAA,OASD,yBAAgBC,UAAU,EAAEC,QAAQ,EAAE;MACpC,OAAO;QAACC,KAAK,EAAEF,UAAU;QAAEG,GAAG,EAAEF;MAAQ,CAAC;IAC3C;EAAC;IAAA;IAAA,OASD,0BAAiBD,UAAU,EAAEC,QAAQ,EAAEG,CAAC,EAAE;MACxCV,MAAM,CAAC,KAAK,EAAE,qCAAqC,CAAC;IACtD;EAAC;IAAA;IAAA,OAQD,qBAAYM,UAAU,EAAEC,QAAQ,EAAE;MAChC,OAAOA,QAAQ,CAACI,kBAAkB;IACpC;EAAC;EAAA;AAAA;AAAA,SAhDkBV,sBAAsB"}