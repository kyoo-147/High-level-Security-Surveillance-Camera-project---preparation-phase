{"version":3,"file":"map-controller.js","names":["MapState","LinearInterpolator","TransitionManager","TRANSITION_EVENTS","NO_TRANSITION_PROPS","transitionDuration","LINEAR_TRANSITION_PROPS","transitionEasing","t","transitionInterpolator","transitionInterruption","BREAK","DEFAULT_INERTIA","INERTIA_EASING","EVENT_TYPES","WHEEL","PAN","PINCH","TRIPLE_PAN","DOUBLE_TAP","KEYBOARD","MapController","isDragging","newState","Object","assign","_interactionState","onStateChange","newViewport","oldViewport","onViewportChange","handleEvent","bind","_transitionManager","_onTransition","_setInteractionState","event","mapState","getMapState","eventStartBlocked","_eventStartBlocked","type","_onPanStart","_onPan","_onPanEnd","_onPinchStart","_onPinch","_onPinchEnd","_onTriplePanStart","_onTriplePan","_onTriplePanEnd","_onDoubleTap","_onWheel","_onKeyDown","offsetCenter","x","y","srcEvent","Boolean","metaKey","altKey","ctrlKey","shiftKey","timeout","timer","setTimeout","newMapState","extraProps","interactionState","getViewportProps","viewStateChanged","keys","some","key","_state","getState","overrides","mapStateProps","options","eventManager","isInteractive","scrollZoom","dragPan","dragRotate","doubleClickZoom","touchZoom","touchRotate","keyboard","prevOptions","dimensionChanged","height","width","updateViewport","processViewportChange","_events","toggleEvents","events","eventNames","enabled","forEach","eventName","on","off","pos","getCenter","_panRotate","isFunctionKeyPressed","rightButton","rotateStart","panStart","_onPanRotate","_onPanMove","_onPanRotateEnd","_onPanMoveEnd","pan","isPanning","inertia","velocity","endPos","velocityX","velocityY","newControllerState","panEnd","rotate","isRotating","rotateEnd","speed","smooth","preventDefault","delta","scale","Math","exp","abs","zoom","around","isZooming","zoomStart","_startPinchRotation","rotation","_lastPinchEvent","deltaAngleX","z","log2","velocityZ","deltaTime","endScale","pow","zoomEnd","blockEvents","startPinchRotation","deltaX","isZoomOut","funcKey","zoomSpeed","moveSpeed","rotateSpeedX","rotateSpeedY","keyCode","bearing","startPos","pitch"],"sources":["../../../src/utils/map-controller.js"],"sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable complexity, max-statements */\nimport MapState from './map-state';\nimport {LinearInterpolator} from './transition';\nimport TransitionManager, {TRANSITION_EVENTS} from './transition-manager';\n\nconst NO_TRANSITION_PROPS = {\n  transitionDuration: 0\n};\nexport const LINEAR_TRANSITION_PROPS = {\n  transitionDuration: 300,\n  transitionEasing: t => t,\n  transitionInterpolator: new LinearInterpolator(),\n  transitionInterruption: TRANSITION_EVENTS.BREAK\n};\n\n// EVENT HANDLING PARAMETERS\nconst DEFAULT_INERTIA = 300;\nconst INERTIA_EASING = t => 1 - (1 - t) * (1 - t);\n\nconst EVENT_TYPES = {\n  WHEEL: ['wheel'],\n  PAN: ['panstart', 'panmove', 'panend'],\n  PINCH: ['pinchstart', 'pinchmove', 'pinchend'],\n  TRIPLE_PAN: ['tripanstart', 'tripanmove', 'tripanend'],\n  DOUBLE_TAP: ['doubletap'],\n  KEYBOARD: ['keydown']\n};\n\n/**\n * @classdesc\n * A class that handles events and updates mercator style viewport parameters\n */\nexport default class MapController {\n  events = [];\n  scrollZoom = true;\n  dragPan = true;\n  dragRotate = true;\n  doubleClickZoom = true;\n  touchZoom = true;\n  touchRotate = false;\n  keyboard = true;\n\n  _interactionState = {\n    isDragging: false\n  };\n  _events = {};\n\n  constructor() {\n    this.handleEvent = this.handleEvent.bind(this);\n    this._transitionManager = new TransitionManager({\n      onViewportChange: this._onTransition,\n      onStateChange: this._setInteractionState\n    });\n  }\n\n  /**\n   * Callback for events\n   * @param {object} event - a mjolnir.js Event\n   */\n  handleEvent(event) {\n    this.mapState = this.getMapState();\n    const eventStartBlocked = this._eventStartBlocked;\n\n    switch (event.type) {\n      case 'panstart':\n        return eventStartBlocked ? false : this._onPanStart(event);\n      case 'panmove':\n        return this._onPan(event);\n      case 'panend':\n        return this._onPanEnd(event);\n      case 'pinchstart':\n        return eventStartBlocked ? false : this._onPinchStart(event);\n      case 'pinchmove':\n        return this._onPinch(event);\n      case 'pinchend':\n        return this._onPinchEnd(event);\n      case 'tripanstart':\n        return eventStartBlocked ? false : this._onTriplePanStart(event);\n      case 'tripanmove':\n        return this._onTriplePan(event);\n      case 'tripanend':\n        return this._onTriplePanEnd(event);\n      case 'doubletap':\n        return this._onDoubleTap(event);\n      case 'wheel':\n        return this._onWheel(event);\n      case 'keydown':\n        return this._onKeyDown(event);\n      default:\n        return false;\n    }\n  }\n\n  /* Event utils */\n  // Event object: http://hammerjs.github.io/api/#event-object\n  getCenter(event) {\n    const {\n      offsetCenter: {x, y}\n    } = event;\n    return [x, y];\n  }\n\n  isFunctionKeyPressed(event) {\n    const {srcEvent} = event;\n    return Boolean(srcEvent.metaKey || srcEvent.altKey || srcEvent.ctrlKey || srcEvent.shiftKey);\n  }\n\n  // When a multi-touch event ends, e.g. pinch, not all pointers are lifted at the same time.\n  // This triggers a brief `pan` event.\n  // Calling this method will temporarily disable *start events to avoid conflicting transitions.\n  blockEvents(timeout) {\n    /* global setTimeout */\n    const timer = setTimeout(() => {\n      if (this._eventStartBlocked === timer) {\n        this._eventStartBlocked = null;\n      }\n    }, timeout);\n    this._eventStartBlocked = timer;\n  }\n\n  /* Callback util */\n  // formats map state and invokes callback function\n  updateViewport(newMapState, extraProps, interactionState) {\n    // Always trigger callback on initial update (resize)\n    const oldViewport =\n      this.mapState instanceof MapState ? this.mapState.getViewportProps() : this.mapState;\n    const newViewport = {...newMapState.getViewportProps(), ...extraProps};\n\n    const viewStateChanged = Object.keys(newViewport).some(\n      key => oldViewport[key] !== newViewport[key]\n    );\n\n    this._state = newMapState.getState();\n    this._setInteractionState(interactionState);\n\n    // viewState has changed\n    if (viewStateChanged) {\n      this.onViewportChange(newViewport, this._interactionState, oldViewport);\n    }\n  }\n\n  _setInteractionState = newState => {\n    Object.assign(this._interactionState, newState);\n    if (this.onStateChange) {\n      this.onStateChange(this._interactionState);\n    }\n  };\n\n  _onTransition = (newViewport, oldViewport) => {\n    this.onViewportChange(newViewport, this._interactionState, oldViewport);\n  };\n\n  getMapState(overrides) {\n    return new MapState({...this.mapStateProps, ...this._state, ...overrides});\n  }\n\n  isDragging() {\n    return this._interactionState.isDragging;\n  }\n\n  /**\n   * Extract interactivity options\n   */\n  setOptions(options) {\n    const {\n      onViewportChange,\n      onStateChange,\n      eventManager = this.eventManager,\n\n      isInteractive = true,\n      scrollZoom = this.scrollZoom,\n      dragPan = this.dragPan,\n      dragRotate = this.dragRotate,\n      doubleClickZoom = this.doubleClickZoom,\n      touchZoom = this.touchZoom,\n      touchRotate = this.touchRotate,\n      keyboard = this.keyboard\n    } = options;\n\n    this.onViewportChange = onViewportChange;\n    this.onStateChange = onStateChange;\n\n    const prevOptions = this.mapStateProps || {};\n    const dimensionChanged =\n      prevOptions.height !== options.height || prevOptions.width !== options.width;\n\n    this.mapStateProps = options;\n\n    if (dimensionChanged) {\n      // Dimensions changed, normalize the props and fire change event\n      this.mapState = prevOptions;\n      this.updateViewport(new MapState(options));\n    }\n    // Update transition\n    this._transitionManager.processViewportChange(options);\n\n    if (this.eventManager !== eventManager) {\n      // EventManager has changed\n      this.eventManager = eventManager;\n      this._events = {};\n      this.toggleEvents(this.events, true);\n    }\n\n    // Register/unregister events\n    this.toggleEvents(EVENT_TYPES.WHEEL, isInteractive && Boolean(scrollZoom));\n    this.toggleEvents(EVENT_TYPES.PAN, isInteractive && Boolean(dragPan || dragRotate));\n    this.toggleEvents(EVENT_TYPES.PINCH, isInteractive && Boolean(touchZoom || touchRotate));\n    this.toggleEvents(EVENT_TYPES.TRIPLE_PAN, isInteractive && Boolean(touchRotate));\n    this.toggleEvents(EVENT_TYPES.DOUBLE_TAP, isInteractive && Boolean(doubleClickZoom));\n    this.toggleEvents(EVENT_TYPES.KEYBOARD, isInteractive && Boolean(keyboard));\n\n    // Interaction toggles\n    this.scrollZoom = scrollZoom;\n    this.dragPan = dragPan;\n    this.dragRotate = dragRotate;\n    this.doubleClickZoom = doubleClickZoom;\n    this.touchZoom = touchZoom;\n    this.touchRotate = touchRotate;\n    this.keyboard = keyboard;\n  }\n\n  toggleEvents(eventNames, enabled) {\n    if (this.eventManager) {\n      eventNames.forEach(eventName => {\n        if (this._events[eventName] !== enabled) {\n          this._events[eventName] = enabled;\n          if (enabled) {\n            this.eventManager.on(eventName, this.handleEvent);\n          } else {\n            this.eventManager.off(eventName, this.handleEvent);\n          }\n        }\n      });\n    }\n  }\n\n  /* Event handlers */\n  // Default handler for the `panstart` event.\n  _onPanStart(event) {\n    const pos = this.getCenter(event);\n    this._panRotate = this.isFunctionKeyPressed(event) || event.rightButton;\n    const newMapState = this._panRotate\n      ? this.mapState.rotateStart({pos})\n      : this.mapState.panStart({pos});\n    this.updateViewport(newMapState, NO_TRANSITION_PROPS, {isDragging: true});\n    return true;\n  }\n\n  // Default handler for the `panmove` event.\n  _onPan(event) {\n    if (!this.isDragging()) {\n      return false;\n    }\n    return this._panRotate ? this._onPanRotate(event) : this._onPanMove(event);\n  }\n\n  // Default handler for the `panend` event.\n  _onPanEnd(event) {\n    if (!this.isDragging()) {\n      return false;\n    }\n    return this._panRotate ? this._onPanRotateEnd(event) : this._onPanMoveEnd(event);\n  }\n\n  // Default handler for panning to move.\n  // Called by `_onPan` when panning without function key pressed.\n  _onPanMove(event) {\n    if (!this.dragPan) {\n      return false;\n    }\n    const pos = this.getCenter(event);\n    const newMapState = this.mapState.pan({pos});\n    this.updateViewport(newMapState, NO_TRANSITION_PROPS, {isPanning: true});\n    return true;\n  }\n\n  _onPanMoveEnd(event) {\n    if (this.dragPan) {\n      const {inertia = DEFAULT_INERTIA} = this.dragPan;\n      if (inertia && event.velocity) {\n        const pos = this.getCenter(event);\n        const endPos = [\n          pos[0] + (event.velocityX * inertia) / 2,\n          pos[1] + (event.velocityY * inertia) / 2\n        ];\n        const newControllerState = this.mapState.pan({pos: endPos}).panEnd();\n        this.updateViewport(\n          newControllerState,\n          {\n            ...LINEAR_TRANSITION_PROPS,\n            transitionDuration: inertia,\n            transitionEasing: INERTIA_EASING\n          },\n          {\n            isDragging: false,\n            isPanning: true\n          }\n        );\n        return true;\n      }\n    }\n    const newMapState = this.mapState.panEnd();\n    this.updateViewport(newMapState, null, {\n      isDragging: false,\n      isPanning: false\n    });\n    return true;\n  }\n\n  // Default handler for panning to rotate.\n  // Called by `_onPan` when panning with function key pressed.\n  _onPanRotate(event) {\n    if (!this.dragRotate) {\n      return false;\n    }\n\n    const pos = this.getCenter(event);\n    const newMapState = this.mapState.rotate({pos});\n    this.updateViewport(newMapState, NO_TRANSITION_PROPS, {isRotating: true});\n    return true;\n  }\n\n  _onPanRotateEnd(event) {\n    if (this.dragRotate) {\n      const {inertia = DEFAULT_INERTIA} = this.dragRotate;\n      if (inertia && event.velocity) {\n        const pos = this.getCenter(event);\n        const endPos = [\n          pos[0] + (event.velocityX * inertia) / 2,\n          pos[1] + (event.velocityY * inertia) / 2\n        ];\n        const newControllerState = this.mapState.rotate({pos: endPos}).rotateEnd();\n        this.updateViewport(\n          newControllerState,\n          {\n            ...LINEAR_TRANSITION_PROPS,\n            transitionDuration: inertia,\n            transitionEasing: INERTIA_EASING\n          },\n          {\n            isDragging: false,\n            isRotating: true\n          }\n        );\n        return true;\n      }\n    }\n    const newMapState = this.mapState.panEnd();\n    this.updateViewport(newMapState, null, {\n      isDragging: false,\n      isRotating: false\n    });\n    return true;\n  }\n\n  // Default handler for the `wheel` event.\n  _onWheel(event) {\n    if (!this.scrollZoom) {\n      return false;\n    }\n\n    const {speed = 0.01, smooth = false} = this.scrollZoom;\n\n    event.preventDefault();\n\n    const pos = this.getCenter(event);\n    const {delta} = event;\n\n    // Map wheel delta to relative scale\n    let scale = 2 / (1 + Math.exp(-Math.abs(delta * speed)));\n    if (delta < 0 && scale !== 0) {\n      scale = 1 / scale;\n    }\n\n    const newMapState = this.mapState.zoom({pos, scale});\n    this.updateViewport(\n      newMapState,\n      {\n        ...LINEAR_TRANSITION_PROPS,\n        transitionInterpolator: new LinearInterpolator({around: pos}),\n        transitionDuration: smooth ? 250 : 1\n      },\n      {\n        isPanning: true,\n        isZooming: true\n      }\n    );\n    return true;\n  }\n\n  // Default handler for the `pinchstart` event.\n  _onPinchStart(event) {\n    const pos = this.getCenter(event);\n    const newMapState = this.mapState.zoomStart({pos}).rotateStart({pos});\n    // hack - hammer's `rotation` field doesn't seem to produce the correct angle\n    this._startPinchRotation = event.rotation;\n    this._lastPinchEvent = event;\n    this.updateViewport(newMapState, NO_TRANSITION_PROPS, {isDragging: true});\n    return true;\n  }\n\n  // Default handler for the `pinch` event.\n  _onPinch(event) {\n    if (!this.isDragging()) {\n      return false;\n    }\n    if (!this.touchZoom && !this.touchRotate) {\n      return false;\n    }\n\n    let newMapState = this.mapState;\n    if (this.touchZoom) {\n      const {scale} = event;\n      const pos = this.getCenter(event);\n      newMapState = newMapState.zoom({pos, scale});\n    }\n    if (this.touchRotate) {\n      const {rotation} = event;\n      newMapState = newMapState.rotate({\n        deltaAngleX: this._startPinchRotation - rotation\n      });\n    }\n\n    this.updateViewport(newMapState, NO_TRANSITION_PROPS, {\n      isDragging: true,\n      isPanning: Boolean(this.touchZoom),\n      isZooming: Boolean(this.touchZoom),\n      isRotating: Boolean(this.touchRotate)\n    });\n    this._lastPinchEvent = event;\n    return true;\n  }\n\n  // Default handler for the `pinchend` event.\n  _onPinchEnd(event) {\n    if (!this.isDragging()) {\n      return false;\n    }\n    if (this.touchZoom) {\n      const {inertia = DEFAULT_INERTIA} = this.touchZoom;\n      const {_lastPinchEvent} = this;\n      if (inertia && _lastPinchEvent && event.scale !== _lastPinchEvent.scale) {\n        const pos = this.getCenter(event);\n        let newMapState = this.mapState.rotateEnd();\n        const z = Math.log2(event.scale);\n        const velocityZ =\n          (z - Math.log2(_lastPinchEvent.scale)) / (event.deltaTime - _lastPinchEvent.deltaTime);\n        const endScale = Math.pow(2, z + (velocityZ * inertia) / 2);\n        newMapState = newMapState.zoom({pos, scale: endScale}).zoomEnd();\n\n        this.updateViewport(\n          newMapState,\n          {\n            ...LINEAR_TRANSITION_PROPS,\n            transitionInterpolator: new LinearInterpolator({around: pos}),\n            transitionDuration: inertia,\n            transitionEasing: INERTIA_EASING\n          },\n          {\n            isDragging: false,\n            isPanning: Boolean(this.touchZoom),\n            isZooming: Boolean(this.touchZoom),\n            isRotating: false\n          }\n        );\n        this.blockEvents(inertia);\n        return true;\n      }\n    }\n\n    const newMapState = this.mapState.zoomEnd().rotateEnd();\n    this._state.startPinchRotation = 0;\n    this.updateViewport(newMapState, null, {\n      isDragging: false,\n      isPanning: false,\n      isZooming: false,\n      isRotating: false\n    });\n    this._startPinchRotation = null;\n    this._lastPinchEvent = null;\n    return true;\n  }\n\n  _onTriplePanStart(event) {\n    const pos = this.getCenter(event);\n    const newMapState = this.mapState.rotateStart({pos});\n    this.updateViewport(newMapState, NO_TRANSITION_PROPS, {isDragging: true});\n    return true;\n  }\n\n  _onTriplePan(event) {\n    if (!this.isDragging()) {\n      return false;\n    }\n    if (!this.touchRotate) {\n      return false;\n    }\n\n    const pos = this.getCenter(event);\n    pos[0] -= event.deltaX;\n\n    const newMapState = this.mapState.rotate({pos});\n    this.updateViewport(newMapState, NO_TRANSITION_PROPS, {isRotating: true});\n    return true;\n  }\n\n  _onTriplePanEnd(event) {\n    if (!this.isDragging()) {\n      return false;\n    }\n    if (this.touchRotate) {\n      const {inertia = DEFAULT_INERTIA} = this.touchRotate;\n      if (inertia && event.velocityY) {\n        const pos = this.getCenter(event);\n        const endPos = [pos[0], (pos[1] += (event.velocityY * inertia) / 2)];\n        const newMapState = this.mapState.rotate({pos: endPos});\n        this.updateViewport(\n          newMapState,\n          {\n            ...LINEAR_TRANSITION_PROPS,\n            transitionDuration: inertia,\n            transitionEasing: INERTIA_EASING\n          },\n          {\n            isDragging: false,\n            isRotating: true\n          }\n        );\n        this.blockEvents(inertia);\n        return false;\n      }\n    }\n    const newMapState = this.mapState.rotateEnd();\n    this.updateViewport(newMapState, null, {\n      isDragging: false,\n      isRotating: false\n    });\n    return true;\n  }\n\n  // Default handler for the `doubletap` event.\n  _onDoubleTap(event) {\n    if (!this.doubleClickZoom) {\n      return false;\n    }\n    const pos = this.getCenter(event);\n    const isZoomOut = this.isFunctionKeyPressed(event);\n\n    const newMapState = this.mapState.zoom({pos, scale: isZoomOut ? 0.5 : 2});\n    this.updateViewport(\n      newMapState,\n      Object.assign({}, LINEAR_TRANSITION_PROPS, {\n        transitionInterpolator: new LinearInterpolator({around: pos})\n      }),\n      {isZooming: true}\n    );\n    return true;\n  }\n\n  // Default handler for the `keydown` event\n  _onKeyDown(event) {\n    if (!this.keyboard) {\n      return false;\n    }\n    const funcKey = this.isFunctionKeyPressed(event);\n    const {zoomSpeed = 2, moveSpeed = 100, rotateSpeedX = 15, rotateSpeedY = 10} = this.keyboard;\n\n    const {mapStateProps} = this;\n    let newMapState;\n\n    switch (event.srcEvent.keyCode) {\n      case 189: // -\n        if (funcKey) {\n          newMapState = this.getMapState({zoom: mapStateProps.zoom - Math.log2(zoomSpeed) - 1});\n        } else {\n          newMapState = this.getMapState({zoom: mapStateProps.zoom - Math.log2(zoomSpeed)});\n        }\n        break;\n      case 187: // +\n        if (funcKey) {\n          newMapState = this.getMapState({zoom: mapStateProps.zoom + Math.log2(zoomSpeed) + 1});\n        } else {\n          newMapState = this.getMapState({zoom: mapStateProps.zoom + Math.log2(zoomSpeed)});\n        }\n        break;\n      case 37: // left\n        if (funcKey) {\n          newMapState = this.getMapState({\n            bearing: mapStateProps.bearing - rotateSpeedX\n          });\n        } else {\n          newMapState = this.mapState.pan({pos: [moveSpeed, 0], startPos: [0, 0]});\n        }\n        break;\n      case 39: // right\n        if (funcKey) {\n          newMapState = this.getMapState({\n            bearing: mapStateProps.bearing + rotateSpeedX\n          });\n        } else {\n          newMapState = this.mapState.pan({pos: [-moveSpeed, 0], startPos: [0, 0]});\n        }\n        break;\n      case 38: // up\n        if (funcKey) {\n          newMapState = this.getMapState({pitch: mapStateProps.pitch + rotateSpeedY});\n        } else {\n          newMapState = this.mapState.pan({pos: [0, moveSpeed], startPos: [0, 0]});\n        }\n        break;\n      case 40: // down\n        if (funcKey) {\n          newMapState = this.getMapState({pitch: mapStateProps.pitch - rotateSpeedY});\n        } else {\n          newMapState = this.mapState.pan({pos: [0, -moveSpeed], startPos: [0, 0]});\n        }\n        break;\n      default:\n        return false;\n    }\n    return this.updateViewport(newMapState, LINEAR_TRANSITION_PROPS);\n  }\n}\n"],"mappings":"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"}