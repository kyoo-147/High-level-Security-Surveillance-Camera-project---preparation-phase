{"version":3,"file":"map-state.js","names":["WebMercatorViewport","normalizeViewportProps","clamp","assert","MAPBOX_LIMITS","minZoom","maxZoom","minPitch","maxPitch","DEFAULT_STATE","pitch","bearing","altitude","PITCH_MOUSE_THRESHOLD","PITCH_ACCEL","MapState","width","height","latitude","longitude","zoom","transitionDuration","transitionEasing","transitionInterpolator","transitionInterruption","startPanLngLat","startZoomLngLat","startRotatePos","startBearing","startPitch","startZoom","Number","isFinite","_viewportProps","_applyConstraints","_state","pos","_getUpdatedMapState","_unproject","startPos","_calculateNewLngLat","deltaAngleX","deltaAngleY","newRotation","_calculateNewPitchAndBearing","_getRotationParams","scale","_calculateNewZoom","zoomedViewport","Object","assign","getMapCenterByLngLatPosition","lngLat","newProps","props","viewport","unproject","Math","log2","deltaScaleX","deltaScaleY","deltaX","deltaY","centerY","startY","abs","min","max"],"sources":["../../../src/utils/map-state.js"],"sourcesContent":["import WebMercatorViewport, {normalizeViewportProps} from 'viewport-mercator-project';\nimport {clamp} from './math-utils';\nimport assert from './assert';\n\n// MAPBOX LIMITS\nexport const MAPBOX_LIMITS = {\n  minZoom: 0,\n  maxZoom: 24,\n  minPitch: 0,\n  maxPitch: 85\n};\n\nconst DEFAULT_STATE = {\n  pitch: 0,\n  bearing: 0,\n  altitude: 1.5\n};\n\nconst PITCH_MOUSE_THRESHOLD = 5;\nconst PITCH_ACCEL = 1.2;\n\nexport default class MapState {\n  constructor({\n    /** Mapbox viewport properties */\n    /** The width of the viewport */\n    width,\n    /** The height of the viewport */\n    height,\n    /** The latitude at the center of the viewport */\n    latitude,\n    /** The longitude at the center of the viewport */\n    longitude,\n    /** The tile zoom level of the map. */\n    zoom,\n    /** The bearing of the viewport in degrees */\n    bearing = DEFAULT_STATE.bearing,\n    /** The pitch of the viewport in degrees */\n    pitch = DEFAULT_STATE.pitch,\n    /**\n     * Specify the altitude of the viewport camera\n     * Unit: map heights, default 1.5\n     * Non-public API, see https://github.com/mapbox/mapbox-gl-js/issues/1137\n     */\n    altitude = DEFAULT_STATE.altitude,\n\n    /** Viewport constraints */\n    maxZoom = MAPBOX_LIMITS.maxZoom,\n    minZoom = MAPBOX_LIMITS.minZoom,\n    maxPitch = MAPBOX_LIMITS.maxPitch,\n    minPitch = MAPBOX_LIMITS.minPitch,\n\n    /** Transition props */\n    transitionDuration,\n    transitionEasing,\n    transitionInterpolator,\n    transitionInterruption,\n\n    /** Interaction states, required to calculate change during transform */\n    /* The point on map being grabbed when the operation first started */\n    startPanLngLat,\n    /* Center of the zoom when the operation first started */\n    startZoomLngLat,\n    /* Cursor position when the rotate operation started */\n    startRotatePos,\n    /** Bearing when current perspective rotate operation started */\n    startBearing,\n    /** Pitch when current perspective rotate operation started */\n    startPitch,\n    /** Zoom when current zoom operation started */\n    startZoom\n  }) {\n    assert(Number.isFinite(width), '`width` must be supplied');\n    assert(Number.isFinite(height), '`height` must be supplied');\n    assert(Number.isFinite(longitude), '`longitude` must be supplied');\n    assert(Number.isFinite(latitude), '`latitude` must be supplied');\n    assert(Number.isFinite(zoom), '`zoom` must be supplied');\n\n    this._viewportProps = this._applyConstraints({\n      width,\n      height,\n      latitude,\n      longitude,\n      zoom,\n      bearing,\n      pitch,\n      altitude,\n      maxZoom,\n      minZoom,\n      maxPitch,\n      minPitch,\n      transitionDuration,\n      transitionEasing,\n      transitionInterpolator,\n      transitionInterruption\n    });\n\n    this._state = {\n      startPanLngLat,\n      startZoomLngLat,\n      startRotatePos,\n      startBearing,\n      startPitch,\n      startZoom\n    };\n  }\n\n  /* Public API */\n\n  getViewportProps() {\n    return this._viewportProps;\n  }\n\n  getState() {\n    return this._state;\n  }\n\n  /**\n   * Start panning\n   * @param {Object} params\n   * @param {[Number, Number]} params.pos - position on screen where the pointer grabs\n   */\n  panStart({pos}) {\n    return this._getUpdatedMapState({\n      startPanLngLat: this._unproject(pos)\n    });\n  }\n\n  /**\n   * Pan\n   * @param {Object} params\n   * @param {[Number, Number]} params.pos - position on screen where the pointer is\n   * @param {[Number, Number]} [params.startPos] - where the pointer grabbed at\n   *   the start of the operation. Must be supplied of `panStart()` was not called\n   */\n  pan({pos, startPos}) {\n    const startPanLngLat = this._state.startPanLngLat || this._unproject(startPos);\n\n    if (!startPanLngLat) {\n      return this;\n    }\n\n    const [longitude, latitude] = this._calculateNewLngLat({\n      startPanLngLat,\n      pos\n    });\n\n    return this._getUpdatedMapState({\n      longitude,\n      latitude\n    });\n  }\n\n  /**\n   * End panning\n   * Must call if `panStart()` was called\n   */\n  panEnd() {\n    return this._getUpdatedMapState({\n      startPanLngLat: null\n    });\n  }\n\n  /**\n   * Start rotating\n   * @param {Object} params\n   * @param {[Number, Number]} params.pos - position on screen where the center is\n   */\n  rotateStart({pos}) {\n    return this._getUpdatedMapState({\n      startRotatePos: pos,\n      startBearing: this._viewportProps.bearing,\n      startPitch: this._viewportProps.pitch\n    });\n  }\n\n  /**\n   * Rotate\n   * @param {Object} params\n   * @param {[Number, Number]} params.pos - position on screen where the center is\n   * @param {Number} params.deltaAngleX - the change to bearing.\n   * @param {Number} params.deltaAngleY - the change to pitch.\n   */\n  rotate({pos, deltaAngleX = 0, deltaAngleY = 0}) {\n    const {startRotatePos, startBearing, startPitch} = this._state;\n\n    if (!Number.isFinite(startBearing) || !Number.isFinite(startPitch)) {\n      return this;\n    }\n\n    let newRotation;\n    if (pos) {\n      newRotation = this._calculateNewPitchAndBearing({\n        ...this._getRotationParams(pos, startRotatePos),\n        startBearing,\n        startPitch\n      });\n    } else {\n      newRotation = {\n        bearing: startBearing + deltaAngleX,\n        pitch: startPitch + deltaAngleY\n      };\n    }\n\n    return this._getUpdatedMapState(newRotation);\n  }\n\n  /**\n   * End rotating\n   * Must call if `rotateStart()` was called\n   */\n  rotateEnd() {\n    return this._getUpdatedMapState({\n      startBearing: null,\n      startPitch: null\n    });\n  }\n\n  /**\n   * Start zooming\n   * @param {Object} params\n   * @param {[Number, Number]} params.pos - position on screen where the center is\n   */\n  zoomStart({pos}) {\n    return this._getUpdatedMapState({\n      startZoomLngLat: this._unproject(pos),\n      startZoom: this._viewportProps.zoom\n    });\n  }\n\n  /**\n   * Zoom\n   * @param {Object} params\n   * @param {[Number, Number]} params.pos - position on screen where the current center is\n   * @param {[Number, Number]} [params.startPos] - the center position at\n   *   the start of the operation. Must be supplied of `zoomStart()` was not called\n   * @param {Number} params.scale - a number between [0, 1] specifying the accumulated\n   *   relative scale.\n   */\n  zoom({pos, startPos, scale}) {\n    assert(scale > 0, '`scale` must be a positive number');\n\n    // Make sure we zoom around the current mouse position rather than map center\n    let {startZoom, startZoomLngLat} = this._state;\n\n    if (!Number.isFinite(startZoom)) {\n      // We have two modes of zoom:\n      // scroll zoom that are discrete events (transform from the current zoom level),\n      // and pinch zoom that are continuous events (transform from the zoom level when\n      // pinch started).\n      // If startZoom state is defined, then use the startZoom state;\n      // otherwise assume discrete zooming\n      startZoom = this._viewportProps.zoom;\n      startZoomLngLat = this._unproject(startPos) || this._unproject(pos);\n    }\n\n    // take the start lnglat and put it where the mouse is down.\n    assert(\n      startZoomLngLat,\n      '`startZoomLngLat` prop is required ' +\n        'for zoom behavior to calculate where to position the map.'\n    );\n\n    const zoom = this._calculateNewZoom({scale, startZoom: startZoom || 0});\n\n    const zoomedViewport = new WebMercatorViewport(Object.assign({}, this._viewportProps, {zoom}));\n    const [longitude, latitude] = zoomedViewport.getMapCenterByLngLatPosition({\n      lngLat: startZoomLngLat,\n      pos\n    });\n\n    return this._getUpdatedMapState({\n      zoom,\n      longitude,\n      latitude\n    });\n  }\n\n  /**\n   * End zooming\n   * Must call if `zoomStart()` was called\n   */\n  zoomEnd() {\n    return this._getUpdatedMapState({\n      startZoomLngLat: null,\n      startZoom: null\n    });\n  }\n\n  /* Private methods */\n\n  _getUpdatedMapState(newProps) {\n    // Update _viewportProps\n    return new MapState(Object.assign({}, this._viewportProps, this._state, newProps));\n  }\n\n  // Apply any constraints (mathematical or defined by _viewportProps) to map state\n  _applyConstraints(props) {\n    // Ensure zoom is within specified range\n    const {maxZoom, minZoom, zoom} = props;\n    props.zoom = clamp(zoom, minZoom, maxZoom);\n\n    // Ensure pitch is within specified range\n    const {maxPitch, minPitch, pitch} = props;\n    props.pitch = clamp(pitch, minPitch, maxPitch);\n\n    Object.assign(props, normalizeViewportProps(props));\n\n    return props;\n  }\n\n  _unproject(pos) {\n    const viewport = new WebMercatorViewport(this._viewportProps);\n    return pos && viewport.unproject(pos);\n  }\n\n  // Calculate a new lnglat based on pixel dragging position\n  _calculateNewLngLat({startPanLngLat, pos}) {\n    const viewport = new WebMercatorViewport(this._viewportProps);\n    return viewport.getMapCenterByLngLatPosition({\n      lngLat: startPanLngLat,\n      pos\n    });\n  }\n\n  // Calculates new zoom\n  _calculateNewZoom({scale, startZoom}) {\n    const {maxZoom, minZoom} = this._viewportProps;\n    const zoom = startZoom + Math.log2(scale);\n    return clamp(zoom, minZoom, maxZoom);\n  }\n\n  // Calculates a new pitch and bearing from a position (coming from an event)\n  _calculateNewPitchAndBearing({deltaScaleX, deltaScaleY, startBearing, startPitch}) {\n    // clamp deltaScaleY to [-1, 1] so that rotation is constrained between minPitch and maxPitch.\n    // deltaScaleX does not need to be clamped as bearing does not have constraints.\n    deltaScaleY = clamp(deltaScaleY, -1, 1);\n\n    const {minPitch, maxPitch} = this._viewportProps;\n\n    const bearing = startBearing + 180 * deltaScaleX;\n    let pitch = startPitch;\n    if (deltaScaleY > 0) {\n      // Gradually increase pitch\n      pitch = startPitch + deltaScaleY * (maxPitch - startPitch);\n    } else if (deltaScaleY < 0) {\n      // Gradually decrease pitch\n      pitch = startPitch - deltaScaleY * (minPitch - startPitch);\n    }\n\n    return {\n      pitch,\n      bearing\n    };\n  }\n\n  _getRotationParams(pos, startPos) {\n    const deltaX = pos[0] - startPos[0];\n    const deltaY = pos[1] - startPos[1];\n    const centerY = pos[1];\n    const startY = startPos[1];\n    const {width, height} = this._viewportProps;\n\n    const deltaScaleX = deltaX / width;\n    let deltaScaleY = 0;\n\n    if (deltaY > 0) {\n      if (Math.abs(height - startY) > PITCH_MOUSE_THRESHOLD) {\n        // Move from 0 to -1 as we drag upwards\n        deltaScaleY = (deltaY / (startY - height)) * PITCH_ACCEL;\n      }\n    } else if (deltaY < 0) {\n      if (startY > PITCH_MOUSE_THRESHOLD) {\n        // Move from 0 to 1 as we drag upwards\n        deltaScaleY = 1 - centerY / startY;\n      }\n    }\n    deltaScaleY = Math.min(1, Math.max(-1, deltaScaleY));\n    return {deltaScaleX, deltaScaleY};\n  }\n}\n"],"mappings":"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"}